@import './variables';
@import './breakpoints';

.signup {
	flex: 0 0 auto;

	.column-wrap,
	.column {
		display: flex;
		flex-flow: column nowrap;
		flex: 1 0 0%;
	}

	.column-wrap {
		width: 100%;
		min-height: 34em;
	}

	.column {
		justify-content: center;
		background: rgba($primary, 0.7);
	}

	.form-sending,
	.form-error,
	.form-success {
		text-align: center;

		h2 {
			margin-bottom: 1em;
		}
	}
}

.signup-form {
	padding: 2em 1em;
	color: $base;

	h2 {
		color: $base;
	}

	a {
		color: $secondary;

		&:hover {
			text-decoration: underline;
		}
	}

	.field {
		position: relative;

		.label {
			color: $base;
			font-size: 0.8em;
		}

		.input {
			position: relative;
			font-size: 1.8em;
			border-radius: 2px;
			z-index: 1;

			&:focus {
				border-color: $primary;
			}
		}

		&.field-required {

			&:before,
			&:after {
				display: block;
				position: absolute;
				line-height: 1;
				top: 2.5em;
				right: 0.25em;
				font-size: 0.667em;
				font-style: italic;
				z-index: 0;
				transform: translateY(0);
				transition: 200ms transform;
			}

			&:before {
				content: attr(data-mismatch);
				color: $base;
			}

			&:after {
				content: attr(data-reqtxt);
				color: $base;
			}

			.label {
				&:before {
					@include serif;
					content: '*';
					display: block;
					position: absolute;
					line-height: 1;
					top: 2.5em;
					right: 0.25em;
					color: $text;
					z-index: 2;
				}
			}
		}

		&.required-error {

			.input {
				color: $error;
				border-color: $error;
				border-width: 2px;
			}

			.label {
				&:before {
					color: $error;
				}
			}

			&:after {
				transform: translateY(-175%);
			}
		}

		&.mismatch-error {

			.input {
				color: $error;
				border-color: $warning;
				border-width: 2px;
			}

			.label {
				&:before {
					color: $error;
				}
			}

			&:before {
				transform: translateY(-175%);
			}
		}
	}

	.button[type='submit'] {
		width: 100%;
		height: auto;
		margin-top: 2em;
		font-weight: bold;
	}
}
